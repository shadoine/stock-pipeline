services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: stockdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d stockdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.9
    restart: unless-stopped
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/stockdb
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: "your-fernent-key-here"  # Generate with: `python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"`
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: >
      bash -c "
      pip install --user -r /requirements.txt &&
      airflow db migrate &&
      airflow users create --username admin --password admin --firstname a --lastname b --role Admin --email admin@example.com &&
      airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 10

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.9
    restart: unless-stopped
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/stockdb
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: "your-fernent-key-here"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "
      pip install --user -r /requirements.txt &&
      airflow scheduler"

volumes:
  postgres_data:
